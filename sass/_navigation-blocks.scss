@use "sass:map";

.poly-navigation-blocks {
  @extend .container, .is-fluid, .px-0;
  background: $poly-navigation-blocks-background;
  > section {
    display: contents;
    .poly-nav {
      display: grid;
      @include until($tablet) {
        grid-template-columns: repeat(map.get($poly-navigation-blocks-grid, 'mobile'), 1fr);
      }
      @include from($tablet) {
        grid-template-columns: repeat(map.get($poly-navigation-blocks-grid, 'tablet'), 1fr);
      }
      @include from($desktop) {
        grid-template-columns: repeat(map.get($poly-navigation-blocks-grid, 'desktop'), 1fr);
      }
      @include from($widescreen) {
        grid-template-columns: repeat(map.get($poly-navigation-blocks-grid, 'widescreen'), 1fr);
      }
      @include from($fullhd) {
        grid-template-columns: repeat(map.get($poly-navigation-blocks-grid, 'fullhd'), 1fr);
      }

      .poly-nav-section:not(.poly-is-one) {
        display: grid;
        justify-items: stretch;
        
        
        grid-template-columns: 1fr 1fr;
        @include until($tablet) {
          grid-template-columns: subgrid;
          grid-row: span calc(var(--poly-rows) * 2);
        }
        @include from($tablet) {
          grid-row: span calc(var(--poly-rows) * 2 - 1);
        }

        grid-template-rows: subgrid;
        grid-column: span 2;

        @include from($desktop) {
          grid-template-columns: repeat(4, 1fr);
          grid-row: span var(--poly-rows);
          .poly-tile:first-child {
            grid-row: span calc(var(--poly-rows) / 2 + 1);
          }
        }

        .poly-tile:first-child {
          grid-column: span 2;
        }

        .poly-tile:not(:first-child) {
          .poly-hero-card .poly-content {
            padding: $poly-grid-pop;
          }
        }
      }

      .poly-is-one {
        display: contents;
        @include until($tablet) {
          a {
            grid-column: span 2;
          }
        }
      }
    }
  }
}
